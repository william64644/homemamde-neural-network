#pragma once

#include <SFML/Graphics.hpp>
#include "reset_vector.h"
#include "variate.h"
#include "get_network_total_error.h"
#include "print_matrix.h"
#include "average.h"
#include "colors.h"
#include "ramdomly_variate_network_weights.h"
#include "reset_matrix.h"
#include "in.h"
#include "vector_packager.h"
#include "Network.h"
#include "get_merged_strings.h"
#include "read_file.h"
#include "dpkg.h"
#include "split.h"
#include "print_layer_data.h"
#include "is_largest.h"
#include "matrix_transponser.h"
#include "double_packager.h"
#include "ask_network_input_from_user.h"
#include "join_threads.h"
#include "repack_network.h"
#include "train_network.h"
#include "write_file.h"
#include "repack.h"
#include "layer_runner.h"
#include "matrix_randomizer.h"
#include "Layer.h"
#include "random_bool.h"
#include "variate_matrix.h"
#include "multiply_scalar_by_vector.h"
#include "get_funneled_trained_network.h"
#include "print_vector.h"
#include "absolute_difference.h"
#include "get_variation_scope.h"
#include "get_tokenized_strings.h"
#include "get_vectorized_string.h"